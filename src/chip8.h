#pragma once

class Chip8 {
private:
    unsigned short opcode;      // Current op code
    unsigned char memory[4096]; // 4k memory
    unsigned char V[16];        // CPU registers

    unsigned short I;  // Index register
    unsigned short pc; // Program counter

    unsigned char delay_timer; // Delay timer
    unsigned char sound_timer; // Sound timer

    unsigned short stack[16]; // CPU stack
    unsigned short sp;        // Stack pointer

    unsigned char fontset[80] = {
        0xF0, 0x90, 0x90, 0x90, 0xF0, //0
        0x20, 0x60, 0x20, 0x20, 0x70, //1
        0xF0, 0x10, 0xF0, 0x80, 0xF0, //2
        0xF0, 0x10, 0xF0, 0x10, 0xF0, //3
        0x90, 0x90, 0xF0, 0x10, 0x10, //4
        0xF0, 0x80, 0xF0, 0x10, 0xF0, //5
        0xF0, 0x80, 0xF0, 0x90, 0xF0, //6
        0xF0, 0x10, 0x20, 0x40, 0x40, //7
        0xF0, 0x90, 0xF0, 0x90, 0xF0, //8
        0xF0, 0x90, 0xF0, 0x10, 0xF0, //9
        0xF0, 0x90, 0xF0, 0x90, 0x90, //A
        0xE0, 0x90, 0xE0, 0x90, 0xE0, //B
        0xF0, 0x80, 0x80, 0x80, 0xF0, //C
        0xE0, 0x90, 0x90, 0x90, 0xE0, //D
        0xF0, 0x80, 0xF0, 0x80, 0xF0, //E
        0xF0, 0x80, 0xF0, 0x80, 0x80  //F
    };

public:
    unsigned char gfx[64 * 32]; // Display
    unsigned char key[16];      // Keypad

    void init();
    void emulate_cycle();             // One emulation cycle
    bool load(const char* file_path); // Load rom
};